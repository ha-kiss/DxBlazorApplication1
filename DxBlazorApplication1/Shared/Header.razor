@using switcher.Shared

<nav class="navbar header-navbar p-0">
    <button class="navbar-toggler bg-primary d-block" @onclick="OnToggleClick">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div style="flex: auto" class="ms-3 fw-bold title pe-4">DxBlazorApplication1</div>
    <ThemeSwitcherToggleButton @bind-Active=@_themeSwitcherShown/>
    <div id="settingsbar" class="@(_themeSwitcherShown ? "" : "hidden-settings-bar")">
        <ThemeSwitcherSideView @bind-ActiveTheme="@SelectedTheme" @bind-Visible="@_themeSwitcherShown" />
    </div>
</nav>

@code {
    [Parameter] public bool ToggleOn { get; set; }
    [Parameter] public EventCallback<bool> ToggleOnChanged { get; set; }
    [Parameter] public EventCallback<ThemeItem> SelectedThemeChanged { get; set; }
    [Parameter] public ThemeItem SelectedTheme { 
        get { return _selectedTheme; }
        set
        {
            if (_selectedTheme != value)
            {
                _selectedTheme = value;
                SelectedThemeChanged.InvokeAsync(_selectedTheme);
            }
        }
    }

    bool _themeSwitcherShown = false;
    ThemeItem _selectedTheme = ThemeItem.Default;

    async Task OnToggleClick() => await Toggle();

    async Task Toggle(bool? value = null) {
        var newValue = value ?? !ToggleOn;
        if(ToggleOn != newValue) {
            ToggleOn = newValue;
            await ToggleOnChanged.InvokeAsync(ToggleOn);
        }
    }
   
}